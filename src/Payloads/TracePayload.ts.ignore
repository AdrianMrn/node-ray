import { Payload } from '@/Payloads/Payload';

export use Spatie\Backtrace\Frame;
use Spatie\Ray\Concerns\RemovesRayFrames;

class TracePayload extends Payload
{
    use RemovesRayFrames;

    /** @var array */
    protected frames;

    /** @var number|null */
    protected startFromIndex = null;

    /** @var number|null */
    protected limit = null;

    public constructor(array frames)
    {
        this.frames = this.removeRayFrames(frames);
    }

    public startFromIndex(index: number): self
    {
        this.startFromIndex = index;

        return this;
    }

    public limit(limit: number): self
    {
        this.limit = limit;

        return this;
    }

    public getType(): string
    {
        return 'trace';
    }

    public getContent(): array
    {
        frames = array_map(function (Frame frame) {
            return [
                'file_name': this.replaceRemotePathWithLocalPath(frame.file),
                'line_number': frame.lineNumber,
                'class': frame.class,
                'method': frame.method,
                'vendor_frame': ! frame.applicationFrame,
            ];
        }, this.frames);

        if (this.limit !== null) {
            frames = array_slice(frames, this.startFromIndex ?? 0, this.limit);
        }

        return compact('frames');
    }
}
